<Project Sdk="Microsoft.NET.Sdk.Razor">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <RootNamespace>WinUiBlazorApp</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;ARM64</Platforms>
    <RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
    <PublishProfile>win10-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <UseMaui>true</UseMaui>
    <EnableMsixTooling>true</EnableMsixTooling>	
	<EnableDefaultXamlItems>false</EnableDefaultXamlItems>
	<EnableDefaultCssItems>false</EnableDefaultCssItems>
	<Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
	<SkipValidateMauiImplicitPackageReferences>true</SkipValidateMauiImplicitPackageReferences>

    <!-- Uncomment the below property to run the project as Unpackaged (https://github.com/dotnet/maui/issues/7380) -->
    <!--<WindowsPackageType>None</WindowsPackageType>-->
  </PropertyGroup>
	
	<!-- Note: using default WinUI assets will break the build, 
	and the build system will suggest to set EnableDefaultContentItems = false, 
	but that will give you a "Can't reach the page" error at runtime.-->
    <!-- App Icon -->
    <ItemGroup>
        <!-- App Icon -->
        <MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

        <!-- Splash Screen -->
        <MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

        <!-- Images -->
        <MauiImage Include="Resources\Images\*" />
        <MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />

        <!-- Custom Fonts -->
        <MauiFont Include="Resources\Fonts\*" />

        <!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
        <MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.5.240428000" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.22621.3233" />
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\BlazorShared\BlazorShared.csproj" />
  </ItemGroup>
	
  <!-- 
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>

  <!-- 
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution 
    Explorer "Package and Publish" context menu entry to be enabled for this project even if 
    the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Update="Microsoft.AspNetCore.Components.WebView.Maui" Version="8.0.40" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Update="Microsoft.Maui.Controls" Version="8.0.40" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Update="Microsoft.Maui.Controls.Compatibility" Version="8.0.40" />
  </ItemGroup>
</Project>
